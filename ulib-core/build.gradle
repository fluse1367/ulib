dependencies {
    compileOnly project(':ulib-core-api')

    compile files(project(':ulib-core-api').configurations.compileOnly)
    shade files(project(':ulib-core-api').configurations.shade)

    compile coordsJavassist
    shade coordsJavassist

    // annotation
    annotationProcessor coordsLombok
}

jar {
    manifest {
        attributes 'Premain-Class': 'eu.software4you.ulib.Agent'
        attributes 'Launcher-Agent-Class': 'eu.software4you.ulib.Agent'
        attributes 'Can-Redefine-Classes': true
        attributes 'Can-Retransform-Classes': true
        attributes 'Main-Class': 'eu.software4you.ulib.Bootstrap'
    }
}

//shadowing
void itSubs(Jar task) {
    def projects = ['core-api']
    for (String sub : projects) {
        def proj = ':ulib-' + sub

        task.dependsOn "$proj:build"

        def buildDir = project(proj).buildDir.path
        task.from("$buildDir/classes/java/main") { include '**' }
        task.from("$buildDir/resources/main") { include '**' }
    }

}

// https://imperceptiblethoughts.com/shadow/configuration/dependencies/#configuring-shadowed-dependencies
shadowJar {
    dependsOn tasks.relocateShadowJar
    configurations = [project.configurations.shade]
    itSubs(shadowJar)

    archiveClassifier.set('lib')
    dependencies {
        exclude(dependency(coordsLombok))
    }
}