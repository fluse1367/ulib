import org.apache.tools.ant.filters.ReplaceTokens

defaultTasks 'clean', 'build', 'jar'

// shadowing - start
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}
// shadowing - end

allprojects {

    def major = 2, minor = 0, patch = 0

    group 'eu.software4you.ulib'
    version "$major.$minor.$patch${project.hasProperty('release') ? '' : '-SNAPSHOT'}"

    repositories {
        mavenCentral()

        maven {
            name 'PaperMC'
            url 'https://papermc.io/repo/repository/maven-public/'
        }
        if (project.name.contains('velocity')) {
            maven {
                name = 'velocitypowered-repo'
                url = 'https://repo.velocitypowered.com/releases/'
            }
        }
    }

    ext {
        gitCommitHash = { ->
            try {
                def stdout = new ByteArrayOutputStream()
                exec {
                    commandLine 'git', 'rev-parse', '--short', 'HEAD'
                    standardOutput = stdout
                }
                return stdout.toString().trim()
            } catch (Exception ignored) {
                return "unknown"
            }
        }

        def release = project.hasProperty('release')

        deployRepoUrl = "https://gitlab.com/api/v4/projects/${release ? /*ulib*/ '19415500' : /*ulib-snapshots*/ '26647460'}/packages/maven"
        deployRepoCredentialMethod = "${release ? 'Job' : 'Deploy'}-Token"
        deployRepoCredentialValue = System.getenv("CI_${release ? /*releases*/ 'JOB' : /*snapshots*/ 'SNAPSHOT_REPOSITORY_DEPLOY'}_TOKEN")

        coordsPaper = 'com.destroystokyo.paper:paper-api:1.16.4-R0.1-SNAPSHOT'
        coordsWaterfall = 'io.github.waterfallmc:waterfall-api:1.16-R0.4-SNAPSHOT'
        coordsVelocity = 'com.velocitypowered:velocity-api:1.1.3-SNAPSHOT'
        coordsXSeries = 'com.github.cryptomorin:XSeries:7.9.1.1'

        coordsJetbrainsAnnotations = 'org.jetbrains:annotations:20.1.0'
        coordsLombok = 'org.projectlombok:lombok:1.18.6'

        coordsJavassist = 'org.javassist:javassist:3.27.0-GA'

        def props = new Properties()
        props.putAll([
                version          : version.toString(),
                'maven.mysql'    : 'mysql:mysql-connector-java:8.0.23',
                'maven.sqlite'   : 'org.xerial:sqlite-jdbc:3.25.2',
                'maven.xseries'  : coordsXSeries,
                'maven.javassist': coordsJavassist,
        ])

        replacementTokens = props
    }

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    compileJava {
        options.encoding = 'UTF-8'
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    jar {
        manifest {
            attributes 'Implementation-Title': project.name
            attributes 'Implementation-Version': version + "-" + gitCommitHash()
            attributes 'Specification-Version': version
            attributes 'Implementation-Vendor': 'Software4You.eu'
            attributes 'Built-By': System.getProperty("user.name")
            attributes 'Build-Jdk': System.getProperty("java.version")
            attributes 'Created-By': 'Gradle ' + gradle.gradleVersion
        }
    }

    configurations {
        shade
    }

    // replace tokens - start
    task processSources(type: Sync) {
        from sourceSets.main.java.srcDirs
        //inputs.property 'version', version.toString()
        filter ReplaceTokens, beginToken: '{{', endToken: '}}', tokens: replacementTokens
        into "$buildDir/src"
    }
    compileJava.source = processSources.outputs

    processResources {
        filter ReplaceTokens, beginToken: '{{', endToken: '}}', tokens: replacementTokens
    }
    // replace tokens - end

    if (!(project.name == 'ulib-core' || project.name == 'ulib-spigot' || project.name == 'ulib-bungeecord' || project.name == 'ulib-velocity')) return
    // shadowing - start
    apply plugin: 'com.github.johnrengelman.shadow' // shadowing

    // https://imperceptiblethoughts.com/shadow/configuration/relocation/#automatically-relocating-dependencies
    task relocateShadowJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation) {
        target = tasks.shadowJar
        prefix = "ulib.ported"
    }
    // shadowing - end
}